---
http_interactions:
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:streamGenerateContent?alt=sse&key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"model":"gemini-2.0-flash","contents":[{"parts":[{"text":"Tell me
        a story about a dragon"}]}]}'
    headers:
      User-Agent:
      - Faraday v2.13.0
      Accept:
      - text/event-stream
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/event-stream
      Content-Disposition:
      - attachment
      Vary:
      - Origin
      - Referer
      - X-Origin
      Transfer-Encoding:
      - chunked
      Date:
      - Sat, 26 Apr 2025 09:31:18 GMT
      Server:
      - scaffolding on HTTPServer2
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=241
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 26 Apr 2025 09:31:23 GMT
recorded_with: VCR 6.3.1
